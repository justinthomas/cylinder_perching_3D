<launch>

  <!-- Giuseppe's stuff -->
  <include file="$(find cylinder_detection)/launch/cylinder_detection.launch">
    <arg name="expose_us" default="9000"/> <!-- G had 9000 -->  <!-- 400 for outside -->
  </include>

  <arg name="model" default="QuadrotorAlpha" />
  <arg name="mass" default="0.722"/>
  
  <param name="cylinder_radius" value="0.04" /> <!-- r= 0.048 ; d= 96mm --> <!-- r = 0.036 outside -->

  <group ns="$(arg model)">

    <param name="mass" value="$(arg mass)" />

    <node pkg="nodelet" type="nodelet" name="standalone_nodelet" args="manager" output="screen">
      <param name="num_worker_threads" type="int" value="8"/>
    </node>

    <node pkg="nodelet"
      type="nodelet"
      name="quad_encode_msg"
      args="load quad_encode_msg/QuadEncodeMsg standalone_nodelet"
      output="screen">
      <remap from="~so3_cmd" to="so3_cmd"/>
      <remap from="~serial_msg" to="to_robot"/>
    </node>

    <node pkg="nodelet"
      type="nodelet"
      name="quad_decode_msg"
      args="load quad_decode_msg/QuadDecodeMsg standalone_nodelet"
      output="screen">
      <remap from="~serial" to="from_robot"/>
    </node>

    <!-- For serial communication -->
    <node pkg="nodelet"
      type="nodelet"
      name="quad_serial_comm"
      args="load quad_serial_comm/QuadSerialComm standalone_nodelet"
      output="screen">
      <param name="device" value="/dev/ttyUSB0"/>
      <param name="baud_rate" value="230400"/>
      <!-- param name="baud_rate" value="57600"/ -->
      <remap from="~to_robot" to="to_robot"/>
      <remap from="~from_robot" to="from_robot"/>
    </node>

    <node pkg="nodelet"
      type="nodelet"
      name="controllers_manager"
      args="load controllers_manager/ControllersManager standalone_nodelet"
      output="screen">
      <rosparam file="$(find state_control_cylinder)/config/controllers.yaml"/>
      <rosparam file="$(find state_control_cylinder)/config/controller_params.yaml"/>
      <remap from="~odom" to="odom"/>
      <remap from="~cmd" to="position_cmd"/>
    </node>

    <!-- node pkg="nodelet"
      type="nodelet"
      args="load so3_control/SO3ControlNodelet standalone_nodelet"
      name="so3_control"
      required="true"
      output="screen">
      <remap from="~odom" to="odom"/>
      <remap from="~position_cmd" to="position_cmd"/>
      <remap from="~motors" to="motors"/>
      <remap from="~corrections" to="corrections"/>
      <remap from="~so3_cmd" to="so3_cmd"/>
      <param name="mass" value="$(arg mass)" />
      <rosparam file="$(find state_control_cylinder)/config/hummingbird_gains.yaml"/>
    </node -->

    <!-- This is the state control node -->
    <rosparam file="$(find state_control_cylinder)/config/vision_params.yaml" />
    <node pkg="state_control_cylinder"
	    type="state_control"
	    name="state_control"
      output="screen">
      <param name="mass" value="$(arg mass)" />
      <rosparam file="$(find state_control_cylinder)/config/vision_params.yaml" />
      <rosparam file="$(find state_control_cylinder)/config/$(arg model)_params.yaml" />
      <rosparam file="$(find state_control_cylinder)/config/hummingbird_gains.yaml" />
      <param name="safety_catch" value="true"/>

      <!-- Publisher Remappings -->
      <remap from="~motors" to="motors"/>
      <remap from="~estop" to="estop"/>
      <remap from="~so3_cmd" to="so3_cmd"/>
      <remap from="~pwm_cmd" to="quad_encode_msg/pwm_cmd"/>
      <remap from="~min_jerk_goal" to="controllers_manager/line_tracker_min_jerk/goal"/>
      <remap from="~line_tracker_distance_goal" to="controllers_manager/line_tracker_distance/goal"/>
      <remap from="~vel_goal" to="controllers_manager/velocity_tracker/vel_cmd_with_yaw"/>
      <remap from="~line_tracker_yaw_goal" to="controllers_manager/line_tracker_yaw/goal"/>

      <!-- Subscriber Remappings -->
      <remap from="~imu" to="quad_decode_msg/imu"/>
      <remap from="~odom" to="odom"/>
      <remap from="~image_features_pp" to="image_features_pp"/>
      <remap from="~output_data" to="quad_decode_msg/output_data"/>

      <!-- Service Remappings -->
      <remap from="~controllers_manager/transition" to="controllers_manager/transition"/>

      <!-- remap from="so3_cmd" to="so3_cmd_vision"/ -->
    </node>

    <node pkg="process_image_features"
      type="process_image_features"
      name="process_image_features"
      output="screen">
    </node>

  </group>


</launch>
